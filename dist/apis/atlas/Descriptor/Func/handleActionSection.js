"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.funcDescriptions = exports.TranslateFuncDescriptions = exports.wait = void 0;
const api_connector_1 = require("@isaaczm/api-connector");
const node_fetch_1 = __importDefault(require("node-fetch"));
const BuffDescription_1 = __importDefault(require("../BuffDescription"));
const TraitDescription_1 = __importDefault(require("../TraitDescription"));
const wait = (ms) => {
    var start = Date.now(), now = start;
    while (now - start < ms) {
        now = Date.now();
    }
};
exports.wait = wait;
const TranslateFuncDescriptions = async () => {
    const req = await node_fetch_1.default('https://script.google.com/macros/s/AKfycbzQK3RpvN2GqFvJ_3Xnyl_5saSvJOns8qrxctfih9CLVEuS5Rm1oNtMfVEviKOKCtU/exec');
    const db = await req.json();
    for (const Func of db.data) {
        if (Func['ESPAÑOL'].length > 0) {
            const type = Func['Func'];
            exports.funcDescriptions.set(type, Func['ESPAÑOL']);
        }
    }
};
exports.TranslateFuncDescriptions = TranslateFuncDescriptions;
exports.funcDescriptions = new Map([
    [api_connector_1.Func.FuncType.ABSORB_NPTURN, 'Absorb Charge'],
    [api_connector_1.Func.FuncType.ADD_STATE, 'Apply Buff'],
    [api_connector_1.Func.FuncType.ADD_STATE_SHORT, 'Apply Buff'],
    [api_connector_1.Func.FuncType.CARD_RESET, 'Shuffle Cards'],
    [api_connector_1.Func.FuncType.DAMAGE_NP, 'Deal Damage'],
    [api_connector_1.Func.FuncType.DAMAGE_NP_HPRATIO_LOW, 'Deal Damage with Bonus for Low Health'],
    [api_connector_1.Func.FuncType.DAMAGE_NP_INDIVIDUAL, 'Deal Damage with Bonus to Trait'],
    [api_connector_1.Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM, 'Deal Damage with Bonus per Trait'],
    [api_connector_1.Func.FuncType.DAMAGE_NP_PIERCE, 'Deal Damage that pierces defense'],
    [api_connector_1.Func.FuncType.DAMAGE_NP_RARE, 'Deal Damage with Bonus to Rarity'],
    [api_connector_1.Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX, 'Deal Damage with Bonus to Trait'],
    [api_connector_1.Func.FuncType.DELAY_NPTURN, 'Drain Charge'],
    [api_connector_1.Func.FuncType.EVENT_DROP_UP, 'Increase Drop Amount'],
    [api_connector_1.Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP, 'Create Clone of Enemy'],
    [api_connector_1.Func.FuncType.ENEMY_ENCOUNT_RATE_UP, 'Improve Appearance Rate of Enemy'],
    [api_connector_1.Func.FuncType.EXP_UP, 'Increase Master Exp'],
    [api_connector_1.Func.FuncType.EXTEND_SKILL, 'Increase Cooldowns'],
    [api_connector_1.Func.FuncType.FIX_COMMANDCARD, 'Lock Command Cards'],
    [api_connector_1.Func.FuncType.FORCE_INSTANT_DEATH, 'Force Instant Death'],
    [api_connector_1.Func.FuncType.GAIN_HP, 'Restore HP'],
    [api_connector_1.Func.FuncType.GAIN_HP_FROM_TARGETS, 'Absorb HP'],
    [api_connector_1.Func.FuncType.GAIN_HP_PER, 'Restore HP to Percent'],
    [api_connector_1.Func.FuncType.GAIN_NP, 'Charge NP'],
    [api_connector_1.Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM, 'Charge NP per Trait'],
    [api_connector_1.Func.FuncType.GAIN_NP_FROM_TARGETS, 'Absorb NP'],
    [api_connector_1.Func.FuncType.GAIN_STAR, 'Gain Critical Stars'],
    [api_connector_1.Func.FuncType.HASTEN_NPTURN, 'Increase Charge'],
    [api_connector_1.Func.FuncType.INSTANT_DEATH, 'Apply Death'],
    [api_connector_1.Func.FuncType.LOSS_HP, 'Drain HP'],
    [api_connector_1.Func.FuncType.LOSS_HP_SAFE, 'Drain HP without killing'],
    [api_connector_1.Func.FuncType.LOSS_NP, 'Drain NP'],
    [api_connector_1.Func.FuncType.LOSS_STAR, 'Remove Critical Stars'],
    [api_connector_1.Func.FuncType.NONE, 'No Effect'],
    [api_connector_1.Func.FuncType.QP_DROP_UP, 'Increase QP Reward'],
    [api_connector_1.Func.FuncType.QP_UP, 'Increase QP Reward'],
    [api_connector_1.Func.FuncType.REPLACE_MEMBER, 'Swap members'],
    [api_connector_1.Func.FuncType.SERVANT_FRIENDSHIP_UP, 'Increase Bond Gain'],
    [api_connector_1.Func.FuncType.SHORTEN_SKILL, 'Reduce Cooldowns'],
    [api_connector_1.Func.FuncType.SUB_STATE, 'Remove Effects'],
    [api_connector_1.Func.FuncType.USER_EQUIP_EXP_UP, 'Increase Mystic Code Exp'],
]);
function handleBuffActionSection(sections, func, dataVal) {
    var _a, _b, _c, _d;
    const section = sections.action, parts = section.parts;
    parts.push('Aplica');
    func.buffs.forEach((buff, index) => {
        if (index > 0)
            parts.push('&');
        const Buff = new BuffDescription_1.default().export(buff);
        parts.push(Buff);
    });
    if (((_a = func.buffs[0]) === null || _a === void 0 ? void 0 : _a.type) === api_connector_1.Buff.BuffType.FIELD_INDIVIDUALITY
        || ((_b = func.buffs[0]) === null || _b === void 0 ? void 0 : _b.type) === api_connector_1.Buff.BuffType.CHANGE_COMMAND_CARD_TYPE) {
        sections.amount.preposition = ' ';
    }
    sections.target.preposition = 'a';
    if (((_c = func.buffs[0]) === null || _c === void 0 ? void 0 : _c.type) === api_connector_1.Buff.BuffType.COMMANDATTACK_FUNCTION
        || ((_d = func.buffs[0]) === null || _d === void 0 ? void 0 : _d.type) === api_connector_1.Buff.BuffType.NPATTACK_PREV_BUFF) {
        sections.target.preposition = 'para';
    }
}
function handleCleanseActionSection(sections, func, dataVal) {
    var _a, _b;
    const section = sections.action, parts = section.parts;
    parts.push((_a = exports.funcDescriptions.get(func.funcType)) !== null && _a !== void 0 ? _a : func.funcType);
    if ((_b = func.traitVals) === null || _b === void 0 ? void 0 : _b.length) {
        parts.push('con');
        func.traitVals.forEach((trait, index) => {
            if (index > 0)
                parts.push('o');
            parts.push(new TraitDescription_1.default(trait).export());
        });
    }
    sections.target.preposition = 'en';
}
function handleChargeNpPerTraitActionSection(sections, func, dataVal) {
    var _a;
    const section = sections.action, parts = section.parts;
    parts.push('Carga NP por');
    if ((_a = func.traitVals) === null || _a === void 0 ? void 0 : _a.length) {
        func.traitVals.forEach((trait, index) => {
            if (index > 0)
                parts.push('&');
            parts.push(new TraitDescription_1.default(trait).export());
        });
    }
    parts.push('traits');
    sections.amount.preposition = 'por';
    sections.target.preposition = 'para';
}
function default_1(sections, func, dataVal) {
    var _a;
    const section = sections.action, parts = section.parts;
    if (func.funcType === api_connector_1.Func.FuncType.ADD_STATE || func.funcType === api_connector_1.Func.FuncType.ADD_STATE_SHORT) {
        handleBuffActionSection(sections, func, dataVal);
        return;
    }
    else if (func.funcType === api_connector_1.Func.FuncType.SUB_STATE) {
        handleCleanseActionSection(sections, func, dataVal);
        return;
    }
    else if (func.funcType === api_connector_1.Func.FuncType.GAIN_NP_BUFF_INDIVIDUAL_SUM) {
        handleChargeNpPerTraitActionSection(sections, func, dataVal);
        return;
    }
    else if (func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP
        || func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP_HPRATIO_LOW
        || func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP_INDIVIDUAL
        || func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP_INDIVIDUAL_SUM
        || func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP_PIERCE
        || func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP_RARE
        || func.funcType === api_connector_1.Func.FuncType.DAMAGE_NP_STATE_INDIVIDUAL_FIX) {
        parts.push('Daña');
        sections.amount.preposition = 'un';
        return;
    }
    switch (func.funcType) {
        case api_connector_1.Func.FuncType.ABSORB_NPTURN:
        case api_connector_1.Func.FuncType.GAIN_HP_FROM_TARGETS:
        case api_connector_1.Func.FuncType.GAIN_NP_FROM_TARGETS:
            sections.amount.preposition = ' ';
            sections.target.preposition = 'al';
            break;
        case api_connector_1.Func.FuncType.CARD_RESET:
        case api_connector_1.Func.FuncType.GAIN_STAR:
        case api_connector_1.Func.FuncType.LOSS_STAR:
        case api_connector_1.Func.FuncType.NONE:
            sections.target.showing = false;
            break;
        case api_connector_1.Func.FuncType.DELAY_NPTURN:
        case api_connector_1.Func.FuncType.LOSS_HP:
        case api_connector_1.Func.FuncType.LOSS_HP_SAFE:
        case api_connector_1.Func.FuncType.LOSS_NP:
            sections.amount.preposition = ' ';
            sections.target.preposition = 'al';
            break;
        case api_connector_1.Func.FuncType.ENEMY_ENCOUNT_COPY_RATE_UP:
        case api_connector_1.Func.FuncType.ENEMY_ENCOUNT_RATE_UP:
        case api_connector_1.Func.FuncType.FIX_COMMANDCARD:
            sections.amount.showing = false;
            sections.target.showing = false;
            break;
        case api_connector_1.Func.FuncType.EVENT_DROP_UP:
        case api_connector_1.Func.FuncType.EXP_UP:
        case api_connector_1.Func.FuncType.QP_DROP_UP:
        case api_connector_1.Func.FuncType.QP_UP:
        case api_connector_1.Func.FuncType.SERVANT_FRIENDSHIP_UP:
        case api_connector_1.Func.FuncType.USER_EQUIP_EXP_UP:
            sections.chance.showing = false;
            sections.amount.preposition = 'un';
            sections.target.showing = false;
            break;
        case api_connector_1.Func.FuncType.EXTEND_SKILL:
        case api_connector_1.Func.FuncType.GAIN_HP:
        case api_connector_1.Func.FuncType.GAIN_NP:
        case api_connector_1.Func.FuncType.HASTEN_NPTURN:
        case api_connector_1.Func.FuncType.SHORTEN_SKILL:
            sections.amount.preposition = ' ';
            sections.target.preposition = 'a';
            break;
        case api_connector_1.Func.FuncType.FORCE_INSTANT_DEATH:
        case api_connector_1.Func.FuncType.INSTANT_DEATH:
            sections.amount.showing = false;
            sections.target.preposition = 'en';
            break;
        case api_connector_1.Func.FuncType.GAIN_HP_PER:
            sections.amount.preposition = ' ';
            sections.target.preposition = 'al';
            break;
        case api_connector_1.Func.FuncType.REPLACE_MEMBER:
            sections.amount.showing = false;
            sections.target.preposition = 'con';
            break;
    }
    parts.push((_a = exports.funcDescriptions.get(func.funcType)) !== null && _a !== void 0 ? _a : func.funcType);
}
exports.default = default_1;
//# sourceMappingURL=data:application/json;base64,